// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

function initMap() {   //gmaps api
	//Want to draw map first with generic location
	var miamiLatitudeLongitude = new SuperMap();
	miamiLatitudeLongitude.talk();
	miamiLatitudeLongitude.createMap();
	miamiLatitudeLongitude.mapMarker();
	// console.log("Wtf")
	// geolocationChecker();

	// userChangesMap();

}


function SuperMap() {
	this.lat = 25.772842;
	this.lng = -80.191355;
	this.latLng = {lat: this.lat, lng: this.lng};
}

//------------------------------------------

SuperMap.prototype.createMap = function(){  // Create a map object and specify the DOM element for display.
	var myself = this
	this.map = new google.maps.Map(document.getElementById('map'), {
    	center: myself.latLng,
    	scrollwheel: true,
    	zoom: 13
  	});
  	console.log(this.map)
  	//locationPoints(locationSearch, map);
  	//mapMarker(map,myLatLng);
}

// -------------------------------------------------------------------------------------

SuperMap.prototype.mapMarker = function(){  // Create a marker and set its position on gmaps
	var marker = new google.maps.Marker({
    	map: this.map,
    	position: this.latLng,
    	title: 'Washer!'
  });
	console.log(marker);
}
//------------------------------------------
SuperMap.prototype.talk = function(){
	console.log("Made Super Map");
	console.log(this.lat, " ", this.lng)
}

// var map = '';




//----------------------------------------------

function geolocationChecker() { //browser geolocation data pull
	if ("geolocation" in navigator) {
		console.log("Geolocation is available");

		var usersLatitudeLongitude = navigator.geolocation.getCurrentPosition(displayPosition,showPositionError);
		
		return usersLatitudeLongitude;
	}
	else {
		alert("Oops, you don't have Geolocation. Time to upgrade your browser");
		return null;
	}
}

function displayPosition (data){
	console.log("Got position");
	console.log(data);  //pull all data to analyze
	//console.log(data.coords.latitude);  pull latitude dataset to analyze
	//console.log(data.coords.longitude); pull longitude dataset to analyze

	var lat = parseFloat(data.coords.latitude);
	var lng = parseFloat(data.coords.longitude);
	console.log(typeof lat);
	console.log(typeof lng);
	var usersGeolocatedLatitudeLongitude = getLocation(lat,lng); //set lat and long into gmaps
	return usersGeolocatedLatitudeLongitude;

}


function showPositionError(error) {
	console.log("Failed to get position :( ");
	console.log(error);
	return null;
}


//------------------------------------------------


function getLocation(latitude,longitude) {//set geolocation data into gmaps
	var myLat = latitude;
	var myLng = longitude;
	var userLatLng = {lat: myLat, lng: myLng};
	return userLatLng;
	//console.log(myLatLng);
		//createMap(myLatLng);
}




function locationCoordinates(locationSearch) { //google api to convert string address data into lat long coordinates

var coodinates = locationSearch;

	$.ajax ({
		type: "GET",
		url: `https://maps.googleapis.com/maps/api/geocode/json?address=${coodinates}`,
		success: function(coordData){
			console.log("success")
			console.log(coordData);
			var latitude = coordData.results[0].geometry.location.lat
			var longitude = coordData.results[0].geometry.location.lng
			getLocation(latitude,longitude);
		},
		error: function(error){
			console.log('error in locationCoordinates');
			console.log(error.responseJSON);
		}
	})
}


//------------------------------------------



function searchMap(){  //on submit callback function to kick everything off
	event.preventDefault();
	var locationSearch = $('.js-mapvalue').val();
	locationCoordinates(locationSearch);  //google api to convert string address data into lat long coordinates
	locationPoints(locationSearch); // internal rails call for existing location data
}


function locationPoints(locationSearch) { // internal rails call for existing location data
	var distanceSearch = 10;

	$.ajax ({
		type: "POST",
		url: "/api/search_merchants",
		data: {location: locationSearch, distance: distanceSearch},
		success: function(mapData){
			console.log("success mapdata")
			console.log(mapData);
			$('.js-merchantCard').empty();
			mapData.forEach(function (merchantObject) {
				//merchantObject.state
				//merchantObject.zipcode
				//merchantObject.city
				//merchantObject.street
				var merchant_id = merchantObject.id

				var lat = parseFloat(merchantObject.lat)
				var lng = parseFloat(merchantObject.lng)
				var myLatLng = {lat: lat, lng: lng};
			
				var html = `

				<div class="row singleMerchantRow">
					<div class="col s12">
						<a href="/${merchant_id}/order/new">
						<div class="js-singleMerchantCard">
					
					<div class="row singleMerchantProfile">
						<div class=" col s3 profile-imageblock"> <img src= "/assets/`+merchantObject.profile_image+`" class="profile-circle circle"> </div>
						<div class=" col s4 profile-infoblock"><span>${merchantObject.first_name}<span></div>
						<div class=" col s2 profile-ratingsblock"><span>Not Yet Rated</span></div>
						<div class=" col s2 profile-ratingsblock"><span>Not Yet Rated</span></div>
					</div>
						</a>
					</div>
					</div>
				</div>`;

				$('.js-merchantCard').append(html);

				mapMarker(map, myLatLng);
			})

			//getLocation(latitude,longitude);
	
		},
		error: function(error){
			console.log('error in SearchMap');
			console.log(error);
		}
	})
}
//------------------------------------------


// function openOrderForm() {

// }


//------------------------------------------

$( document ).ready(function() {

	// $('.js-mapsearch').on('submit', searchMap); //on-submit callback for merchants
	$('.js-sortby-dropdown').material_select();
});

//--------------


